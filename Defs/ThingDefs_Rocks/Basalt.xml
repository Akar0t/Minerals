<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  <ThingDef Name="WeatheredBasalt" ParentName="WeatheredRockBase">
    <defName>WeatheredBasalt</defName>
    <label>Weathered Basalt</label>
    <description>A wall of weathered basalt, the most common igneous rock.</description>
    <graphicData>
      <texPath>Things/Rock/WeatheredBasalt</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(4,4)</drawSize>
      <color>(50,50,50)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>1400</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>TKKN_ChunkLava</mineableThing>
      <mineableDropChance>0.2</mineableDropChance>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.01</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <!--
		<allowedTerrains>
			<li>Basalt_Rough</li>
			<li>WaterOceanShallow</li>
			<li>WaterShallow</li>
		</allowedTerrains>
		-->
    <allowedTerrains>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>TKKN_LavaRock</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.6</min>
      <max>1.8</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.5</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>1</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.05</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>10</DropProbability>
      </li>
      <li>
        <ResourceDefName>ObsidianShard</ResourceDefName>
        <DropProbability>0.1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>TKKN_LavaRock</li>
    </ThingsToReplace>
  </ThingDef>
  
  
  <ThingDef Name="SolidBasalt" ParentName="SolidRockBase">
    <defName>SolidBasalt</defName>
    <label>Solid Basalt</label>
    <description>A solid wall of basalt, composed of deep layers of ancient lava flows.</description>
    <graphicData>
      <texPath>Things/Rock/WeatheredBasalt</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(4,4)</drawSize>
      <color>(50,50,50)</color>
    </graphicData>
    <statBases>
      <Flammability>0</Flammability>
      <Beauty>-2</Beauty>
      <MaxHitPoints>1600</MaxHitPoints>
    </statBases>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>TKKN_ChunkLava</mineableThing>
      <mineableDropChance>0.2</mineableDropChance>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <!--
		<allowedTerrains>
			<li>Basalt_Rough</li>
			<li>WaterOceanShallow</li>
			<li>WaterShallow</li>
		</allowedTerrains>
		-->
    <allowedTerrains>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>TKKN_LavaRock</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.7</min>
      <max>1.8</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>1</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.05</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>10</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>TKKN_LavaRock</li>
    </ThingsToReplace>
  </ThingDef>
  

  <ThingDef Name="HewnBasalt" ParentName="HewnRockBase">
    <defName>HewnBasalt</defName>
    <label>Hewn Basalt</label>
    <description>A hewn wall of basalt, composed of deep layers of ancient lava flows.</description>
    <graphicData>
			<texPath>Things/Rock/HewnRockWall</texPath>
			<graphicClass>Graphic_Random</graphicClass>
			<linkType>CornerFiller</linkType>
			<linkFlags>
				<li>Wall</li>
        <li>Rock</li>
        <li>MapEdge</li>
			</linkFlags>
			<damageData>
				<cornerTL>Damage/Corner</cornerTL>
				<cornerTR>Damage/Corner</cornerTR>
				<cornerBL>Damage/Corner</cornerBL>
				<cornerBR>Damage/Corner</cornerBR>
				<edgeTop>Damage/Edge</edgeTop>
				<edgeBot>Damage/Edge</edgeBot>
				<edgeLeft>Damage/Edge</edgeLeft>
				<edgeRight>Damage/Edge</edgeRight>
			</damageData>
      <color>(50,50,50)</color>
    </graphicData>
    <statBases>
      <MaxHitPoints>1600</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>-2</Beauty>
    </statBases>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>TKKN_ChunkLava</mineableThing>
      <mineableDropChance>0.2</mineableDropChance>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
      <isEdifice>true</isEdifice>
    </building>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>1</initialSizeMin>
    <initialSizeMax>1</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <!--
		<allowedTerrains>
			<li>Basalt_Rough</li>
			<li>WaterOceanShallow</li>
			<li>WaterShallow</li>
		</allowedTerrains>
		-->
    <allowedTerrains>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Basalt</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>false</neededNearbyTerrainSizeEffect>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>1</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>1.7</min>
      <max>1.8</max>
    </visualSizeRange>
    <visualClustering>1.0</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>0.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>1</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.01</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5</DropProbability>
      </li>
      <li>
        <ResourceDefName>FlintShard</ResourceDefName>
        <DropProbability>0.1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Things this mineral replaces when a map is initialized -->
    <ThingsToReplace>
      <li>TKKN_LavaRock</li>
    </ThingsToReplace>
  </ThingDef>
 


  <ThingDef Name="LargePassableBasalt" ParentName="StaticMineralBase">
    <defName>LargePassableBasalt</defName>
    <label>Basalt boulders</label>
    <description>Basalt boulders. These are small enough to be climbed over and provide decent cover in the many gunfights that occur in this rimworld.</description>
    <graphicData>
      <texPath>Things/Rock/PassableBasalt</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1.5,1.5)</drawSize>
      <color>(50,50,50)</color>
    </graphicData>
    <altitudeLayer>SmallWire</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.5</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>800</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>-1</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>80</pathCost>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>TKKN_ChunkLava</mineableThing>
      <mineableDropChance>0.2</mineableDropChance>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
    </building>
    <filthLeaving>RockRubble</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.05</minClusterProbability>
    <maxClusterProbability>0.1</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.7</initialSizeMin>
    <initialSizeMax>1.0</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>TKKN_LavaRock_Rough</li>
			<li>RockySoil</li>
			<li>Gravel</li>
			<li>Sand</li>
			<li>Soil</li>
			<li>PoorSoil</li>
			<li>MarginalSoil</li>
			<li>MarshyTerrain</li>
			<li>Marsh</li>
			<li>Mud</li>
      <li>SavannaSoil</li>
      <li>WaterShallow</li>
      <li>WaterMovingShallow</li>
			<li>WaterOceanShallow</li>
      <li>WaterDeep</li>
      <li>WaterMovingDeep</li>
			<li>WaterOceanDeep</li>
			<li>Ice</li>
			<li>TKKN_SaltField</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>WeatheredBasalt</li>
      <li>SolidBasalt</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>4</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>WeatheredBasalt</li>
    </associatedOres>
    <nearAssociatedOreBonus>4</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>3</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.7</min>
      <max>1.1</max>
    </visualSizeRange>
    <visualClustering>0.6</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.5</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>1</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.03</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>15</DropProbability>
      </li>
      <li>
        <ResourceDefName>ObsidianShard</ResourceDefName>
        <DropProbability>0.1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    
    <!-- If smaller than 1, it looks smaller in water -->
    <submergedSize>.5</submergedSize>
    <submergedRadius>4</submergedRadius>
  </ThingDef>

  
  
  <ThingDef Name="PassableBasalt" ParentName="StaticMineralBase">
    <defName>PassableBasalt</defName>
    <label>Ancient lava flow</label>
    <description>A weathered lava flow. This was once a river of molted rock, but has since cooled and shattered. Very difficult to walk over but provides little cover in a gunfight.</description>
    <graphicData>
      <texPath>Things/Rock/PassableBasalt</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1.5,1.5)</drawSize>
      <color>(50,50,50)</color>
    </graphicData>
    <altitudeLayer>SmallWire</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.3</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>600</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>-1</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>80</pathCost>
    <building>
      <isInert>true</isInert>
      <canBuildNonEdificesUnder>false</canBuildNonEdificesUnder>
      <isNaturalRock>true</isNaturalRock>
      <isResourceRock>true</isResourceRock>
      <mineableThing>TKKN_ChunkLava</mineableThing>
      <mineableDropChance>0.15</mineableDropChance>
      <mineableYield>1</mineableYield>
      <mineableNonMinedEfficiency>0.8</mineableNonMinedEfficiency>
      <claimable>false</claimable>
      <deconstructible>false</deconstructible>
    </building>
    <filthLeaving>RockRubble</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>10</minClusterSize>
    <maxClusterSize>200</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>0.4</initialSizeMin>
    <initialSizeMax>0.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
		<allowedTerrains>
			<li>TKKN_LavaRock_Rough</li>
      <li>TKKN_LavaRock_RoughHewn</li>
			<li>RockySoil</li>
			<li>Gravel</li>
			<li>Sand</li>
			<li>Soil</li>
			<li>MarshyTerrain</li>
			<li>Marsh</li>
			<li>PoorSoil</li>
			<li>MarginalSoil</li>
			<li>Mud</li>
      <li>SavannaSoil</li>
      <li>MarginalSoil</li>
			<li>TKKN_SaltField</li>
		</allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>TKKN_LavaRock_Rough</li>
      <li>TKKN_LavaRock_RoughHewn</li>
      <li>WeatheredBasalt</li>
      <li>PassableBasalt</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>20</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>WeatheredBasalt</li>
      <li>TKKN_LavaRock_RoughHewn</li>
    </associatedOres>
    <nearAssociatedOreBonus>2</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>40</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.3</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0.5</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>2.1</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>1</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.02</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>15</DropProbability>
      </li>
      <li>
        <ResourceDefName>ObsidianShard</ResourceDefName>
        <DropProbability>0.1</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    
    <!-- If smaller than 1, it looks smaller in water -->
    <submergedSize>.1</submergedSize>
    <submergedRadius>3</submergedRadius>
  </ThingDef>
  
</Defs>
