<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  
  <ThingDef ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>CalciteCrystal</defName>
    <label>Calcite Crystal</label>
    <description>Crystals of calcium carbonate. A common mineral found underground, particulary in limestone caves. Interesting, but not otherwise very useful. Yeilds rubble if mined.</description>
    <graphicData>
      <texPath>Things/Mineral/CalciteCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(211,213,212)</li>
      <li>(216,216,216)</li>
      <li>(202,202,202)</li>
      <li>(206,206,206)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(211,213,212)</li>
      <li>(216,200,180)</li>
      <li>(218,203,190)</li>
      <li>(216,200,180)</li>
      <li>(202,200,190)</li>
      <li>(206,200,200)</li>
      <li>(205,175,150)</li>
      <li>(215,195,160)</li>
    </randomColorsTwo>

    <altitudeLayer>LowPlant</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.1</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>5</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>40</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.4</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.005</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>30</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.95</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <!--
		<allowedTerrains>
			<li>add_terrains_here</li>
		</allowedTerrains>
		-->
    <!-- The terrains this must be near to, but not necessarily on -->
    <!--
		<neededNearbyTerrains>
			<li>add_terrains_here</li>
		</neededNearbyTerrains>
		-->
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>Limestone</li>
    </associatedOres>
    <nearAssociatedOreBonus>3</nearAssociatedOreBonus>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>22</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.6</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.5</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>2.0</visualSpread>
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>20</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef Name="QuartzCrystal" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>QuartzCrystal</defName>
    <label>Quartz Crystal</label>
    <description>Crystals of silicon dioxide, the same material glass is made of. A common mineral found underground. Yeilds glass batch when mined. Once in a while a gem-quality peice might be found.</description>
    <graphicData>
      <texPath>Things/Mineral/QuartzCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(220,220,220)</color>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <altitudeLayer>LowPlant</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.1</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>10</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>40</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.7</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.002</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>15</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.5</initialSizeMin>
    <initialSizeMax>.7</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <!--
		<allowedTerrains>
			<li>add_terrains_here</li>
		</allowedTerrains>
		-->
    <!-- The terrains this must be near to, but not necessarily on -->
    <!--
		<neededNearbyTerrains>
			<li>add_terrains_here</li>
		</neededNearbyTerrains>
		-->
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>GoldPyriteCrystal</li>
      <li>SilverPyriteCrystal</li>
      <li>MineableGold</li>
      <li>WeatheredOreGold</li>
      <li>SolidOreGold</li>
    </associatedOres>
    <nearAssociatedOreBonus>10</nearAssociatedOreBonus>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>45</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.05</min>
      <max>0.5</max>
    </visualSizeRange>
    <visualClustering>0.3</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>2.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.4</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>25</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
      </li>
      <li>
        <ResourceDefName>GlassBatch</ResourceDefName>
        <DropProbability>4</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="QuartzCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>AmethystCrystal</defName>
    <label>Amethyst Crystal</label>
    <description>Crystals of silicon dioxide. Impurities of iron make these crystals a beautiful purple. A common mineral found underground. Yeilds glass batch when mined. Sometimes a gem-quality peice might be found.</description>
    <graphicData>
      <texPath>Things/Mineral/QuartzCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(220,220,220)</color>
      <colorTwo>(120, 90, 160)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>15</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!-- For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>1.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>GlassBatch</ResourceDefName>
        <DropProbability>4</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef Name="SchorlCrystal" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>SchorlCrystal</defName>
    <label>Schorl Crystal</label>
    <description>The most common and least valuable form of tourmaline, a boron silicate mineral.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(100,100,100)</color>
      <colorTwo>(120,120,120)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(70,70,70)</li>
      <li>(75,75,75)</li>
      <li>(60,60,60)</li>
      <li>(55,55,55)</li>
      <li>(80,80,80)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(70,70,70)</li>
      <li>(75,75,75)</li>
      <li>(60,60,60)</li>
      <li>(55,55,55)</li>
      <li>(80,80,80)</li>
    </randomColorsTwo>
    <altitudeLayer>LowPlant</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.1</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>700</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>4</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>30</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.5</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>0.4</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Granite_Rough</li>
      <li>Marble_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Granite_Rough</li>
      <li>Marble_Rough</li>
    </neededNearbyTerrains>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>QuartzCrystal</li>
      <li>AmethystCrystal</li>
      <li>CitrineCrystal</li>
      <li>PrasioliteCrystal</li>
      <li>DraviteCrystal</li>
      <li>RubelliteCrystal</li>
      <li>IndicoliteCrystal</li>
      <li>GreenTourmalineCrystal</li>
      <li>SiberiteCrystal</li>
      <li>WatermelonTourmalineCrystal</li>
    </associatedOres>
    <nearAssociatedOreBonus>10</nearAssociatedOreBonus>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>30</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.05</min>
      <max>0.4</max>
    </visualSizeRange>
    <visualClustering>0.5</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>2.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.4</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>1</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>2.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
   </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="SchorlCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>DraviteCrystal</defName>
    <label>Dravite Crystal</label>
    <description>A type of tourmaline, a boron silicate mineral with many chemical variations. This tan variety sometimes yeilds gem-quality stones.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(87,39,29)</color>
      <colorTwo>(251,229,172)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(87,39,29)</li>
      <li>(62,22,10)</li>
      <li>(35,35,27)</li>
      <li>(137,23,6)</li>
      <li>(93,26,7)</li>
      <li>(136,57,24)</li>
      <li>(119,34,27)</li>
      <li>(73,45,34)</li>
      <li>(79,42,30)</li>
    </randomColorsOne>
    
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>10</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>2.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="SchorlCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>RubelliteCrystal</defName>
    <label>Rubellite Crystal</label>
    <description>A type of tourmaline, a boron silicate mineral with many chemical variations. This red variety often yeilds high quality gemstones.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(228,156,160)</color>
      <colorTwo>(71,6,14)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(228,156,160)</li>
      <li>(132,29,48)</li>
      <li>(62,22,10)</li>
      <li>(113,49,50)</li>
      <li>(198,118,127)</li>
      <li>(195,103,114)</li>
      <li>(165,94,98)</li>
      <li>(212,141,145)</li>
      <li>(233,195,192)</li>
      <li>(212,172,172)</li>
    </randomColorsOne>
    
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>35</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.1</min>
      <max>0.5</max>
    </visualSizeRange>
    <visualClustering>0.3</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>2.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.5</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>4.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="SchorlCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>IndicoliteCrystal</defName>
    <label>Indicolite Crystal</label>
    <description>A type of tourmaline, a boron silicate mineral with many chemical variations. This blue-green variety often yeilds high quality gemstones.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(45,102,113)</color>
      <colorTwo>(7,95,231)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(45,102,113)</li>
      <li>(20,147,167)</li>
      <li>(37,156,203)</li>
      <li>(28,142,135)</li>
      <li>(0,50,43)</li>
      <li>(0,32,59)</li>
      <li>(47,145,158)</li>
      <li>(16,93,104)</li>
      <li>(37,169,119)</li>
    </randomColorsOne>
    
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>10</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.1</min>
      <max>0.7</max>
    </visualSizeRange>
    <visualClustering>0.9</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>2.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>6.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef Name="MagnetiteCrystal" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>MagnetiteCrystal</defName>
    <label>Magnetite Crystals</label>
    <description>Formations of iron(II,III) oxide, a common iron ore in sedimentary and igenous rocks.</description>
    <graphicData>
      <texPath>Things/Mineral/PyriteCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(100,100,100)</color>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <altitudeLayer>FloorEmplacement</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.05</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>3</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>20</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.25</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.002</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>15</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.8</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.4</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
    </neededNearbyTerrains>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableSteel</li>
    </associatedOres>
    <nearAssociatedOreBonus>50</nearAssociatedOreBonus>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>40</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0.4</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.6</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>30</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.1</DropProbability>
      </li>
      <li>
        <ResourceDefName>Steel</ResourceDefName>
        <DropProbability>5</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="MagnetiteCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>LodestoneCrystal</defName>
    <label>Lodestone</label>
    <description>Formations of iron(II,III) oxide, a common iron ore in sedimentary and igenous rocks. This particular one seems to be the rare magnetized variety known as lodestone.</description>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.002</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>5</maxClusterSize>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MagnetiteCrystal</li>
      <li>MineableSteel</li>
    </associatedOres>
    <nearAssociatedOreBonus>10</nearAssociatedOreBonus>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>20</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
      </li>
      <li>
        <ResourceDefName>MagneticMaterial</ResourceDefName>
        <DropProbability>4</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="MagnetiteCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>CassiteriteCrystal</defName>
    <label>Cassiterite Crystals</label>
    <description>Formations of tin oxide, a common ore of tin. Occasionally used for gem stones.</description>
    <graphicData>
      <texPath>Things/Mineral/PyriteCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(92,68,53)</color>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.25</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>7</maxClusterSize>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Granite_Rough</li>
      <li>Marble_Rough</li>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Granite_Rough</li>
      <li>Marble_Rough</li>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
    </neededNearbyTerrains>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableTin</li>
      <li>SteamGeyser</li>
      <li>QuartzCrystal</li>
      <li>AmethystCrystal</li>
      <li>CitrineCrystal</li>
      <li>PrasioliteCrystal</li>
      <li>DraviteCrystal</li>
      <li>RubelliteCrystal</li>
      <li>IndicoliteCrystal</li>
      <li>GreenTourmalineCrystal</li>
      <li>SiberiteCrystal</li>
      <li>MineableTungsten</li>
    </associatedOres>
    <nearAssociatedOreBonus>20</nearAssociatedOreBonus>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>30</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>1.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>Tin</ResourceDefName>
        <DropProbability>5</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef Name="RubyCrystal" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>RubyCrystal</defName>
    <label>Rubies embedded in rock</label>
    <description>Crystals of aluminium oxide embedded in rock. One of the hardest minerals and often cut into gems. Impurities of chromium color this patch is a deep red.</description>
    <graphicData>
      <texPath>Things/Mineral/CorundumCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(202,119,140)</color>
    </graphicData>
    <altitudeLayer>Floor</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.01</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>1500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>15</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>1</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>5</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.1</initialSizeMin>
    <initialSizeMax>.7</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Marble_Rough</li>
      <li>LavaRock_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Marble_Rough</li>
      <li>LavaRock_Rough</li>
    </neededNearbyTerrains>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>15</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.1</min>
      <max>0.25</max>
    </visualSizeRange>
    <visualClustering>0.3</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>5</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>7.0</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="RubyCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>SapphireCrystal</defName>
    <label>Sapphires embedded in rock</label>
    <description>Crystals of aluminium oxide embedded in rock. One of the hardest minerals and often cut into gems. Impurities of iron color this patch is a deep blue.</description>
    <graphicData>
      <texPath>Things/Mineral/CorundumCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(131,156,199)</color>
    </graphicData>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>7.0</DropProbability>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="EmeraldCrystal" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>EmeraldCrystal</defName>
    <label>Emeralds embedded in rock</label>
    <description>Crystals of beryl, a type of beryllium aluminium silicate, a rare mineral often used for gemstones. This variety is green due to trace impurities of chromium.</description>
    <graphicData>
      <texPath>Things/Mineral/BerylCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(84,169,137)</color>
    </graphicData>
    <altitudeLayer>Floor</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.01</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>1500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>15</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>1</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>5</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.4</initialSizeMin>
    <initialSizeMax>.8</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Granite_Rough</li>
      <li>Limestone_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Granite_Rough</li>
      <li>Limestone_Rough</li>
    </neededNearbyTerrains>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableTin</li>
      <li>MineableTungsten</li>
    </associatedOres>
    <nearAssociatedOreBonus>10</nearAssociatedOreBonus>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>15</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.1</min>
      <max>0.25</max>
    </visualSizeRange>
    <visualClustering>0.3</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.1</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>5</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef ParentName="EmeraldCrystal" Class="Minerals.ThingDef_StaticMineral">
    <defName>BerylCrystal</defName>
    <label>Goshenite embedded in rock</label>
    <description>Crystals of beryl, a type of beryllium aluminium silicate, a rare mineral often used for gemstones. This variety is clear.</description>
    <graphicData>
      <texPath>Things/Mineral/BerylCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(255, 255, 255)</color>
    </graphicData>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="DiamondCrystal" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>DiamondCrystal</defName>
    <label>Diamonds embedded in rock</label>
    <description>Crystals of pure carbon. The hardest known substance and a valuable gemstone.</description>
    <graphicData>
      <texPath>Things/Mineral/DiamondCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
    </graphicData>
    <altitudeLayer>Floor</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.01</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>1500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>1</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>7</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.1</initialSizeMin>
    <initialSizeMax>.7</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Granite_Rough</li>
      <li>LavaRock_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Granite_Rough</li>
      <li>LavaRock_Rough</li>
    </neededNearbyTerrains>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <allowedBiomes>
      <li>IceSheet</li>
      <li>Tundra</li>
      <li>Desert</li>
      <li>ExtremeDesert</li>
      <li>BorealForest</li>
      <li>TropicalSwampArchipelago</li>
      <li>BorealArchipelago</li>
      <li>TundraArchipelago</li>
      <li>ColdBogArchipelago</li>
      <li>DesertArchipelago</li>
      <li>VolcanicFlow</li>
      <li>DesertSaltFields</li>
      <li>RedwoodForest</li>
    </allowedBiomes>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>1</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>12</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.1</min>
      <max>0.2</max>
    </visualSizeRange>
    <visualClustering>0.2</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>5</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>15.0</DropProbability>
      </li>
    </randomlyDropResources>
  </ThingDef>


  <ThingDef Name="UraniniteDeposit" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>UraniniteDeposit</defName>
    <label>Uraninite Deposit</label>
    <description>Formations of uranium oxide, a major uranium ore. Often assocaited with silver.</description>
    <graphicData>
      <texPath>Things/Mineral/UraniniteDeposit</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(127,120,102)</color>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <comps>
      <li Class="CompProperties_Glower">
        <glowRadius>1</glowRadius>
        <glowColor>(15,200,0,0)</glowColor>
      </li>
    </comps>
    <altitudeLayer>FloorEmplacement</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.05</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>3</Beauty>
    </statBases>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <pathCost>10</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.25</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.002</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>7</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.4</initialSizeMin>
    <initialSizeMax>.9</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.2</initialSizeVariation>
    <!-- The biomes this can appear in. The default is all ones known to mod-->
    <!--
		<allowedBiomes>
			<li>add_biomes_here</li>
		</allowedBiomes>
		-->
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
      <li>Marble_Rough</li>
      <li>Granite_Rough</li>
      <li>LavaRock_Rough</li>
    </allowedTerrains>
    <!-- The terrains this must be near to, but not necessarily on -->
    <neededNearbyTerrains>
      <li>Limestone_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
      <li>Marble_Rough</li>
      <li>Granite_Rough</li>
      <li>LavaRock_Rough</li>
    </neededNearbyTerrains>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableUranium</li>
      <li>MineableSilver</li>
    </associatedOres>
    <nearAssociatedOreBonus>50</nearAssociatedOreBonus>
    <!-- how far away it can be from needed nearby terrains-->
    <neededNearbyTerrainRadius>3</neededNearbyTerrainRadius>
    <!-- If true, growth rate and initial size depends on distance from needed terrains -->
    <neededNearbyTerrainSizeEffect>true</neededNearbyTerrainSizeEffect>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>40</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.3</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0.5</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>2.0</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.3</visualSizeVariation>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>30</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
      </li>
      <li>
        <ResourceDefName>Uranium</ResourceDefName>
        <DropProbability>5</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


  <ThingDef Name="MalachiteDeposit" ParentName="StaticMineralBase" Class="Minerals.ThingDef_StaticMineral">
    <defName>MalachiteDeposit</defName>
    <label>Malachite Deposit</label>
    <description>Beautiful green deposits of copper carbonate hydroxide, sometimes used for gemstones or a source of copper ore. Often found near copper ore, azurite, calcite, and limestone rock.</description>
    <graphicData>
      <texPath>Things/Mineral/UraniniteDeposit</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(86,177,129)</color>
      <shaderType>CutoutComplex</shaderType>
    </graphicData>
    <altitudeLayer>FloorEmplacement</altitudeLayer>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <statBases>
      <MaxHitPoints>1000</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>15</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>1</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0</minClusterProbability>
    <maxClusterProbability>0.001</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>3</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.8</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableSilver</li>
      <li>Limestone</li>
      <li>MineableCopper</li>
      <li>AzuriteDeposit</li>
      <li>MalachiteDeposit</li>
      <li>CalciteCrystal</li>
    </associatedOres>
    <nearAssociatedOreBonus>50</nearAssociatedOreBonus>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>40</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.6</max>
    </visualSizeRange>
    <visualClustering>0.3</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.5</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.5</visualSizeVariation>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The amount of resource returned if the mineral is its maximum size -->
    <maxMinedYeild>30</maxMinedYeild>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>1.5</DropProbability>
      </li>
      <li>
        <ResourceDefName>Copper</ResourceDefName>
        <DropProbability>6</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
  </ThingDef>


</Defs>
